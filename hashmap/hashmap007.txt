keySpeak     = Σ
keyTab       = τ
keyNewline   = η
keyBackspace = ‹
keyAlt       = æ
Terminal window size = 81x21
Same hashcode: vv, wW; uo, vP

rectangle = x,y,w,h = 22,154,1400,788
screencapture -k -v -g -R 22,154,1400,788 -V45 hashmap004.mov
----
¶alias emacs='~/Applications/Emacs.app/Contents/MacOS/emacs-nw --no-init-file --no-splash --eval "(load (expand-file-name \"~/other-code/videos/hashmap/el-hashmap.el\"))"'
rm -f hashmap-draw.txt hashmap-draw.txt~
emacs hashmap-draw.txt
¶②¶A hashmap is fundamentally an array, so let's draw one.
    0     1     2     3     4     5     6     7     8     9    10
    ↓     ↓     ↓     ↓     ↓     ↓     ↓     ↓     ↓     ↓     ↓
  +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+
  |░░░| |░░░| |░░░| |░░░| |░░░| |░░░| |░░░| |░░░| |░░░| |░░░| |   |
  +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ +---+ |   |
                                              |‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |
                                              | "Key": {          |
                                              |   "name":"Alice"  |
                                              |   "birthTime":3 } |
                                              | "Value": "puzzle" |
                                              |___________________|
What happens after p0.setName("Bob")?
¶©
¶Since¶ ¶p0¶ ¶is¶ ¶the¶ ¶instance¶ ¶that's¶ ¶in¶ ¶the¶ ¶map¶, ¶the¶ ¶object¶ ¶in¶ ¶the¶ ¶map¶ ¶changes¶.«¢ppppp««æbd«Bob«¢eb«  «æ>bf««¢f«
¶This¶ ¶is¶ ¶what¶ ¶map¶ ¶looks¶ ¶like¶ ¶after¶ ¶p0.setName("Bob")¶.«¢ak«©
¶Why¶ ¶does¶ ¶map¶.¶containsKey¶(¶p0¶) ¶return¶ ¶false¶?  ¶Let's¶ ¶follow¶ ¶the steps¶:
¶1. Calculate hashcode: ¶¶p0¶.¶hashCode¶() == ¶2076879¶
¶2. Compute index     : ¶¶2076879¶ % ¶11¶ == 2
¶3. Search at index   : ¶¶map¶ ¶looks¶ ¶for¶ ¶p0¶ ¶in index 2¶.  ¶The list¶ ¶there¶ ¶is empty¶η¶   so¶ ¶it returns false.¶©
©NOTE: Delete the previous question and answer the next one
«¢  ppppppaw«
«æ\«¶Why does map.containsKey(p1) return false?¶
  ¶Though p1's hashCode and index point to 10 so the map looks through index 10.¶
¶However, p1.equals(p0) is false as "Alice".equals("Bob") is false.¶
«æ\«¶Why was p2.equals(p0) false?  Because map looks in index 2 which is empty.¶

¶What lessons can we take from this puzzle?¶
¶1. How can we avoid these situations?¶
¶2. If we encounter this in a codebase, how can we mitigate the damage?¶

¶Avoidance¶
¶---------¶«¢u«1«¢l«
1. Do not use mutable objects in classes that invoke hashCode
   - this includes classes like LinkedHashMap, TreeMap, ConcurrentHashMap and
- HashSet, TreeSet
2. If a mutable object is hashed in your data structure, ensure the reference
   does not escape.  You can do this by ensuring:
a. The object you put in the map is not reachable outside
b. Only return copies of the hashed object.
   i. This includes making a copy in methods like keySet() and entrySet().
«æ/«

⑳«æ>««¢xs««¢xc«
