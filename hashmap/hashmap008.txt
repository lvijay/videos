keySpeak     = Σ
keyTab       = τ
keyNewline   = η
keyBackspace = ‹
keyAlt       = æ
Terminal window size = 81x21
Same hashcode: AxE, BYE; axe, bYe

rectangle = x,y,w,h = 22,154,1400,788
screencapture -k -v -g -R 22,154,1400,788 -V45 hashmap004.mov
----
¶alias emacs='~/Applications/Emacs.app/Contents/MacOS/emacs-nw --no-init-file --no-splash --eval "(load (expand-file-name \"~/other-code/videos/hashmap/el-hashmap.el\"))"'
rm -f hashmap-draw.txt hashmap-draw.txt~
clear
emacs hashmap-draw.txt
¶⑤¶Avoidance¶
¶---------¶«¢u«1«¢l«②Σ

Avoidance; is preventing the problems described by this puzzle to
begin with.  The best problems are ones you don't need to solve
because you ensured they don't occur.

First, don't over-ride hash-code in mutable objects.  Do not use
mutable objects in classes that will invoke hashCode against them.
In addition to Hash-Map, this list includes maps like Linked-Hash-Map, Concurrent-HashMap, and sets like Hash-Set and Tree-Set.

If you must hash A mutable object ensure that the reference does not
escape.  In our puzzle P0 should not have been available to modify
later.  Some ways you can do this are

Copy the object being put in the map.  And only return copies of the
hashed object.  This is easier said than done because it includes
updating more complex methods like it-er-ay-ter, entry-set, and key-set.

Σ
¶Avoidance¶ ¶is¶ ¶preventing¶ ¶the¶ ¶problems¶ ¶described¶ ¶by¶ ¶this¶ ¶puzzle¶.  ¶The¶
¶best¶ ¶problems¶ ¶are¶ ¶ones¶ ¶you¶ ¶don't¶ ¶need¶ ¶to solve¶ ¶because¶ ¶you¶ ¶ensured¶
¶they¶ ¶don't¶ ¶occur.¶㊺

¶Don't¶ ¶override¶ ¶the has¶hCode ¶method in¶ ¶mutable¶ ¶objects.¶⑤
¶Do not¶ ¶use¶ ¶mutable¶ ¶objects¶ ¶in classes¶ ¶that¶ ¶invoke¶ ¶hashCode¶
   - ¶this¶ ¶includes¶ ¶maps¶ ¶like¶ LinkedHashMap, TreeMap, ConcurrentHashMap ¶and¶
- ¶sets¶ ¶like¶ HashSet, TreeSet
«æ\«2. ¶If a¶ ¶mutable¶ ¶object¶ ¶is hashed in¶ ¶your¶ ¶data¶ ¶structure¶, ¶ensure¶ ¶the¶ ¶reference¶
   ¶does¶ ¶not¶ ¶escape¶.  ¶In our¶ ¶example¶, ¶p0¶ ¶should¶ ¶have¶ ¶been¶ ¶unavailable¶ ¶to¶ ¶invoke¶
¶setName¶ ¶on¶.  ¶You¶ ¶can¶ ¶do¶ ¶this¶ ¶by¶ ¶ensuring¶:
a. ¶The object¶ ¶you¶ ¶put¶ ¶in the map¶ ¶is not¶ ¶reachable¶ ¶outside¶
b. ¶Only¶ ¶return¶ ¶copies¶ ¶of the hashed object.¶
   i. ¶This¶ ¶includes¶ ¶making¶ ¶a¶ ¶copy¶ ¶in¶ ¶your¶ ¶regular¶ ¶return¶ ¶methods¶ ¶and¶
ii. ¶complex¶ ¶methods¶ ¶like¶ ¶keySet¶(), ¶entrySet¶(), ¶iterator¶()
«æ\«ω

¶Mitigation¶
¶----------¶«¢u«1«¢l«©
«¢xs««¢xc«
