export PS1=âŠ‚'\[\e]0;\u@\h: \w\a\]${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]\$ 'âŠƒ
Â«c:lÂ»â‘³echo '
This prompt is waaaaaaaaaay too long.  Let's shorten itâ‘¤Â«c:cÂ»
export PS1='\W$ '
â‘³# Now we code
â‘³cat > hello.py << ENDL
from bcc import BPF

program = r"""
int hello(void *ctx) {â‘³ // yes, a C program
  bpf_trace_printk("hello world!");
  return 0;
}
"""
â‘³
b = BPF(text=program)
syscall = b.get_syscall_fnname("execve")
b.attach_kprobe(event=syscall, fn_name="hello")

b.trace_print()
ENDL
ãŠ¿
python hello.py
â‘³# eye-roll emojiâ‘¤âŠ‚ðŸ™„âŠƒ
â‘³python3 hello.py
â‘³sudo python3 hello.py
â‘³Â«c:cÂ»Â©
â‘³# Our hello program is triggered on every execve, or on
# any executable's launch.
â‘³sudo python3 hello.py & â‘³# background it
sleep 1; cat hello.py; head -c1 hello.py; wc -l hello.py
ãŠ¿ãŠ¿# Cool, right?
